{"mappings":"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","sources":["<anon>","src/main.ts","src/functions/index.ts","src/functions/bcb-scrap.ts"],"sourcesContent":["var $hGjT9$path = require(\"path\");\nvar $hGjT9$electron = require(\"electron\");\nvar $hGjT9$puppeteer = require(\"puppeteer\");\nvar $hGjT9$cheerio = require(\"cheerio\");\nvar $hGjT9$lodash = require(\"lodash\");\nvar $hGjT9$os = require(\"os\");\n\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n\n\n\n\n\nlet $6801b3266fe6dc35$var$resJson = [];\nlet $6801b3266fe6dc35$var$browserPath = '';\nconst $6801b3266fe6dc35$var$userInfo = (0, ($parcel$interopDefault($hGjT9$os))).userInfo();\nswitch((0, ($parcel$interopDefault($hGjT9$os))).platform()){\n    case 'win32':\n        $6801b3266fe6dc35$var$browserPath = 'C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe';\n        break;\n    case 'linux':\n        $6801b3266fe6dc35$var$browserPath = `/home/${$6801b3266fe6dc35$var$userInfo.username}/.cache/puppeteer/chrome/linux-132.0.6834.110/chrome-linux64/chrome`;\n        break;\n}\nconst $6801b3266fe6dc35$var$scrapBCB = async (data)=>{\n    const browser = await $hGjT9$puppeteer.launch({\n        executablePath: $6801b3266fe6dc35$var$browserPath\n    });\n    const page = await browser.newPage();\n    await page.setViewport({\n        width: 1920,\n        height: 1080\n    });\n    try {\n        await page.goto(`https://www.bcb.gov.br/estatisticas/reporttxjuroshistorico?historicotaxajurosdiario_page=1&codigoSegmento=1&codigoModalidade=${data.codModalidade}&tipoModalidade=D&InicioPeriodo=${data.periodo}`);\n        await page.waitForSelector('table.table tbody', {\n            timeout: 10000\n        });\n        const htmlContent = await page.content();\n        if (htmlContent) {\n            const $ = $hGjT9$cheerio.load(htmlContent);\n            const list = [];\n            $('table').find('tbody > tr').each((i, tr)=>{\n                $(tr).find('> td').each((j, td)=>{\n                    const value = $(td).text();\n                    list.push(value.replace(' ', ''));\n                });\n            });\n            if (list.length > 0) {\n                const chunked = (0, $hGjT9$lodash.chunk)(list, 4);\n                chunked.forEach((chunk)=>{\n                    $6801b3266fe6dc35$var$resJson?.push({\n                        position: chunk[0],\n                        bankName: chunk[1],\n                        monthlyRate: chunk[2],\n                        annualRate: chunk[3]\n                    });\n                });\n            } else console.log('Falha ao buscar os dados, tente novamente.');\n        }\n    } catch (error) {\n        console.log(error);\n    }\n    await browser.close();\n};\nvar $6801b3266fe6dc35$export$2e2bcd8739ae039 = async (data)=>{\n    await $6801b3266fe6dc35$var$scrapBCB(data);\n    let total = 0;\n    let monthlyAverage = 0;\n    Object.keys($6801b3266fe6dc35$var$resJson).forEach((el, i)=>{\n        const format = parseFloat($6801b3266fe6dc35$var$resJson[i].monthlyRate.replace(',', '.'));\n        total += format;\n    });\n    monthlyAverage = Math.floor(total / $6801b3266fe6dc35$var$resJson.length * 100) / 100;\n    console.log({\n        total: total,\n        numeroDeBancos: $6801b3266fe6dc35$var$resJson.length,\n        media: monthlyAverage\n    });\n    $6801b3266fe6dc35$var$resJson = [];\n    return Math.floor(monthlyAverage * 100) / 100;\n};\n\n\n\n\n\nvar $660a1abae0a1dcdc$var$$parcel$__dirname = $hGjT9$path.resolve(__dirname, \"../src\");\nconst $660a1abae0a1dcdc$var$electronPath = (0, ($parcel$interopDefault($hGjT9$path))).join($660a1abae0a1dcdc$var$$parcel$__dirname, '../_electron/');\nconst $660a1abae0a1dcdc$var$createWindow = ()=>{\n    const win = new (0, $hGjT9$electron.BrowserWindow)({\n        width: 1280,\n        height: 720,\n        maximizable: true,\n        center: true,\n        icon: '../images/logo.ico',\n        roundedCorners: true,\n        webPreferences: {\n            preload: $660a1abae0a1dcdc$var$electronPath + 'preload.js'\n        }\n    });\n    const menu = (0, $hGjT9$electron.Menu).buildFromTemplate([\n        {\n            label: 'BCB Interest Check',\n            submenu: [\n                {\n                    click: ()=>win.webContents.send('update-counter', 1),\n                    label: 'Increment'\n                },\n                {\n                    click: ()=>win.webContents.send('update-counter', -1),\n                    label: 'Decrement'\n                }\n            ]\n        }\n    ]);\n    (0, $hGjT9$electron.Menu).setApplicationMenu(menu);\n    win.loadFile($660a1abae0a1dcdc$var$electronPath + 'static/index.html');\n    win.webContents.openDevTools();\n};\n(0, $hGjT9$electron.app).whenReady().then(()=>{\n    (0, $hGjT9$electron.ipcMain).handle('fetchBCB', async (_event, data)=>{\n        const req = await (0, $6801b3266fe6dc35$export$2e2bcd8739ae039)(data);\n        if (req) return req;\n        throw new Error('Falha ao buscar os dados no Banco Central.');\n    });\n    (0, $hGjT9$electron.ipcMain).on('counter-value', (_event, value)=>{\n        console.log(value);\n    });\n    $660a1abae0a1dcdc$var$createWindow();\n    (0, $hGjT9$electron.app).on('activate', ()=>{\n        if ((0, $hGjT9$electron.BrowserWindow).getAllWindows().length === 0) $660a1abae0a1dcdc$var$createWindow();\n    });\n});\n(0, $hGjT9$electron.app).on('window-all-closed', ()=>{\n    if (process.platform !== 'darwin') (0, $hGjT9$electron.app).quit();\n});\n\n\n//# sourceMappingURL=main.js.map\n","import { app, BrowserWindow, ipcMain, Menu } from 'electron';\nimport path from 'path';\nimport { bcbScrap } from './functions';\nimport { IFetchBCBArguments } from './types';\n\nconst electronPath = path.join(__dirname, '../_electron/');\n\nconst createWindow = () => {\n  const win = new BrowserWindow({\n    width: 1280,\n    height: 720,\n    maximizable: true,\n    center: true,\n    icon: '../images/logo.ico',\n    roundedCorners: true,\n    webPreferences: {\n      preload: electronPath + 'preload.js',\n    },\n  });\n\n  const menu = Menu.buildFromTemplate([\n    {\n      label: 'BCB Interest Check',\n      submenu: [\n        {\n          click: () => win.webContents.send('update-counter', 1),\n          label: 'Increment',\n        },\n        {\n          click: () => win.webContents.send('update-counter', -1),\n          label: 'Decrement',\n        },\n      ],\n    },\n  ]);\n\n  Menu.setApplicationMenu(menu);\n  win.loadFile(electronPath + 'static/index.html');\n  win.webContents.openDevTools();\n};\n\napp.whenReady().then(() => {\n  ipcMain.handle('fetchBCB', async (_event, data: IFetchBCBArguments) => {\n    const req = await bcbScrap(data);\n\n    if (req) {\n      return req;\n    }\n\n    throw new Error('Falha ao buscar os dados no Banco Central.');\n  });\n\n  ipcMain.on('counter-value', (_event, value: number) => {\n    console.log(value);\n  });\n\n  createWindow();\n\n  app.on('activate', () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      createWindow();\n    }\n  });\n});\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n","import bcbScrap from './bcb-scrap';\n\nexport { bcbScrap };\n","import * as puppeteer from 'puppeteer';\nimport * as cheerio from 'cheerio';\nimport { chunk } from 'lodash';\nimport { GenericObject, IFetchBCBArguments } from '../types';\nimport os from 'os';\n\nlet resJson: GenericObject[] = [];\nlet browserPath: string = '';\nconst userInfo = os.userInfo();\n\nswitch (os.platform()) {\n  case 'win32': {\n    browserPath =\n      'C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe';\n    break;\n  }\n  case 'linux': {\n    browserPath = `/home/${userInfo.username}/.cache/puppeteer/chrome/linux-132.0.6834.110/chrome-linux64/chrome`;\n    break;\n  }\n}\nconst scrapBCB = async (data: IFetchBCBArguments) => {\n  const browser = await puppeteer.launch({\n    executablePath: browserPath,\n  });\n\n  const page = await browser.newPage();\n\n  await page.setViewport({\n    width: 1920,\n    height: 1080,\n  });\n\n  try {\n    await page.goto(\n      `https://www.bcb.gov.br/estatisticas/reporttxjuroshistorico?historicotaxajurosdiario_page=1&codigoSegmento=1&codigoModalidade=${data.codModalidade}&tipoModalidade=D&InicioPeriodo=${data.periodo}`\n    );\n\n    await page.waitForSelector('table.table tbody', {\n      timeout: 10000,\n    });\n\n    const htmlContent = await page.content();\n\n    if (htmlContent) {\n      const $ = cheerio.load(htmlContent);\n      const list: string[] = [];\n\n      $('table')\n        .find('tbody > tr')\n        .each((i, tr) => {\n          $(tr)\n            .find('> td')\n            .each((j, td) => {\n              const value = $(td).text();\n              list.push(value.replace(' ', ''));\n            });\n        });\n\n      if (list.length > 0) {\n        const chunked = chunk(list, 4);\n\n        chunked.forEach((chunk) => {\n          resJson?.push({\n            position: chunk[0],\n            bankName: chunk[1],\n            monthlyRate: chunk[2],\n            annualRate: chunk[3],\n          });\n        });\n      } else console.log('Falha ao buscar os dados, tente novamente.');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n\n  await browser.close();\n};\n\nexport default async (data: IFetchBCBArguments): Promise<number> => {\n  await scrapBCB(data);\n  let total = 0;\n  let monthlyAverage = 0;\n\n  Object.keys(resJson).forEach((el, i) => {\n    const format = parseFloat(resJson[i].monthlyRate.replace(',', '.'));\n    total += format;\n  });\n\n  monthlyAverage = Math.floor((total / resJson.length) * 100) / 100;\n\n  console.log({\n    total,\n    numeroDeBancos: resJson.length,\n    media: monthlyAverage,\n  });\n\n  resJson = [];\n\n  return Math.floor(monthlyAverage * 100) / 100;\n};\n"],"names":["$hGjT9$path","require","$hGjT9$electron","$hGjT9$puppeteer","$hGjT9$cheerio","$hGjT9$lodash","$hGjT9$os","$parcel$interopDefault","a","__esModule","default","$6801b3266fe6dc35$var$resJson","$6801b3266fe6dc35$var$browserPath","$6801b3266fe6dc35$var$userInfo","userInfo","platform","username","$6801b3266fe6dc35$var$scrapBCB","data","browser","launch","executablePath","page","newPage","setViewport","width","height","goto","codModalidade","periodo","waitForSelector","timeout","htmlContent","content","$","load","list","find","each","i","tr","j","td","value","text","push","replace","length","chunked","chunk","forEach","position","bankName","monthlyRate","annualRate","console","log","error","close","$6801b3266fe6dc35$export$2e2bcd8739ae039","total","monthlyAverage","Object","keys","el","format","parseFloat","Math","floor","numeroDeBancos","media","$660a1abae0a1dcdc$var$$parcel$__dirname","resolve","__dirname","$660a1abae0a1dcdc$var$electronPath","join","$660a1abae0a1dcdc$var$createWindow","win","BrowserWindow","maximizable","center","icon","roundedCorners","webPreferences","preload","menu","Menu","buildFromTemplate","label","submenu","click","webContents","send","setApplicationMenu","loadFile","openDevTools","app","whenReady","then","ipcMain","handle","_event","req","Error","on","getAllWindows","process","quit"],"version":3,"file":"main.js.map","sourceRoot":"../"}